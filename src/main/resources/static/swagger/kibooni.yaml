openapi: 3.0.0
info:
  title: Kibooni API Console
  version: 2.0.3
servers:
  - url: https://kibooni-api.malangmalang.com/
    description: server 환경 접근
  - url: http://172.30.2.111:8080
    description: 임정석 연구원 ip local로 접근
  - url: http://172.30.2.101:8080
    description: 최진영 연구원 ip local로 접근
tags:
  - name: Email APIs
  - name: User APIs
  - name: Mood APIs
  - name: Diary APIs
  - name: Keyword APIs
  - name: Like APIs
  - name: Stats APIs
  - name: Reply APIs
paths:
  /email/send:
    post:
      tags:
        - Email APIs
      summary: 입력한 이메일로 인증번호를 요청
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: Gildong.Hong@hancom.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: param-003
                      detail:
                        type: string
                        example: Parameter name mismatch
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error
  /email/auth:
    post:
      tags:
        - Email APIs
      summary: 이메일과 인증번호를 입력하여 유효한 이메일인지 확인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: Gildong.Hong@hancom.com
                auth:
                  type: string
                  example: 123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: param-003
                        detail: Parameter name mismatch
                      - code: param-004
                        detail: Email auth error. check the value again
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error


  /users/join:
    post:
      tags:
        - User APIs
      summary: 회원정보를 입력받아 회원가입을 진행(이메일 인증완료시)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: gildong
                password:
                  type: string
                  example: passdong
                email:
                  type: string
                  example: Gildong.Hong@hancom.com
                nickname:
                  type: string
                  example: GD
                genger:
                  type: string
                  example: male
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: param-003
                        detail: Parameter name mismatch
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error
  /users/join/check:
    post:
      tags:
        - User APIs
      summary: username의 중복 확인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: gildong
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: param-003
                        detail: Parameter name mismatch
                      - code: param-006
                        detail: Already userd username
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error
  /users/auth:
    post:
      tags:
        - User APIs
      summary: username,password 입력받아 로그인 진행(성공시 토큰값 리턴)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: gildong
                password:
                  type: string
                  example: passdong
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzUxMiJ9.eyJlbWFpbCI6ImFtcG0zNTNAbmF2ZXIuY29tIiwidXNlcm5hbWUiOiJhZG1pbiIsImlhdCI6MTU4MzE5MTE1MywiZXhwIjoxNTgzMjA5MTUzfQ.wUPrLpWC_UxHPvyZIE-n-y0PnjxxwlmSEWk3wpqeRPQQZeTFt58ciJ4nDNnjfbdgc1nIJXR6gc32KHvoJW4kDQ
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: param-003
                        detail: Parameter name mismatch
                      - code: param-005
                        detail: User auth error. check the value again
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error


  /users/rewards:
    get:
      tags:
        - User APIs
      summary: 사용자의 현재 리워드 금액을 확인
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      money:
                        type: integer
                        example: 240
        '401':
          description: Auth error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: auth-001
                        detail: JWT token has expired
                      - code: auth-002
                        detail: Unable to get JWT token
                      - code: auth-003
                        detail: Invalid JWT token
                      - code: auth-004
                        detail: JWT token does not begin with Bearer String
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error




  /moods:
    post:
      tags:
        - Mood APIs
      summary: 감정값만 입력받아서 등록(내용,파일,키워드x)
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mood:
                  type: integer
                  format: int32
                  example: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      moodNo:
                        type: integer
                        format: int64
                        example: 3\
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: param-002
                        detail: Invalid parameter(s)
                      - code: param-003
                        detail: Parameter name mismatch
        '401':
          description: Auth error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: auth-001
                        detail: JWT token has expired
                      - code: auth-002
                        detail: Unable to get JWT token
                      - code: auth-003
                        detail: Invalid JWT token
                      - code: auth-004
                        detail: JWT token does not begin with Bearer String
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error


  /diarys/user:
    get:
      tags:
        - Diary APIs
      summary: 내가 작성한 게시글 리스트  출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: isAd
          required: false
          schema:
            default: 20
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiaryDto'
        '401':
          description: Auth error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: auth-001
                        detail: JWT token has expired
                      - code: auth-002
                        detail: Unable to get JWT token
                      - code: auth-003
                        detail: Invalid JWT token
                      - code: auth-004
                        detail: JWT token does not begin with Bearer String
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error
  /diarys:
    get:
      tags:
        - Diary APIs
      summary: 전체 사용자 게시글 중 moodPublic이 true인 게시글 리스트 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
          description: n번째 api 호출시 n-1번째의 마지막 게시글의 고유번호<br>(offset게시글번호를 기준으로 다음값들을 불러옴)
        - in: query
          name: isAd
          required: false
          schema:
            default: 20
            type: integer
            format: int32
          description: 마지막 광고의 위치
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: auth-001
                        detail: JWT token has expired
                      - code: auth-002
                        detail: Unable to get JWT token
                      - code: auth-003
                        detail: Invalid JWT token
                      - code: auth-004
                        detail: JWT token does not begin with Bearer String
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiaryDto'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error
    post:
      tags:
        - Diary APIs
      summary: 신규 글 작성, moodNo 입력시 해당 게시글 수정
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                moodNo:
                  type: integer
                  format: int64
                file:
                  type: array
                  items:
                    type: string
                    format: binary
                mood:
                  type: integer
                  format: int32
                keywordContents:
                  type: array
                  items:
                    type: string
                contents:
                  type: string
                moodPublic:
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: Client error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: param-002
                        detail: Invalid parameter(s)
        '401':
          description: Auth error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      detail:
                        type: string
                    example:
                      - code: auth-001
                        detail: JWT token has expired
                      - code: auth-002
                        detail: Unable to get JWT token
                      - code: auth-003
                        detail: Invalid JWT token
                      - code: auth-004
                        detail: JWT token does not begin with Bearer String
        '403':
          description: Access error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: perm-001
                      detail:
                        type: string
                        example: Permission denied
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: server-001
                      detail:
                        type: string
                        example: Internal server error
  /diarys/{no}:
    put:
      tags:
        - Diary APIs
      summary: 해당 번호 게시글 수정
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
                mood:
                  type: integer
                  format: int32
                keywordContents:
                  type: array
                  items:
                    type: string
                contents:
                  type: string
                moodPublic:
                  type: boolean
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Diary APIs
      summary: 해당 번호 게시글 삭제
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true

  /diarys/keyword:
    get:
      tags:
        - Diary APIs
      summary: 해당 키워드를 입력한 게시글 리스트 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: isAd
          required: false
          schema:
            default: 20
            type: integer
            format: int32
        - in: query
          name: keyword
          required: false
          schema:
            type: array
            items:
              type: string
          description: Add item을 통해 여러개의 키워드 입력 가능
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 게시글 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiaryDto'
  /diarys/mood:
    get:
      tags:
        - Diary APIs
      summary: 해당 감정에 해당하는 게시글 리스트 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
        - in: query
          name: isAd
          required: false
          schema:
            default: 20
            type: integer
            format: int32
        - in: query
          name: mood
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 게시글 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiaryDto'






  /keywords:
    get:
      tags:
        - Keyword APIs
      summary: 해당 유저의 keyword 목록 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 키워드 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result :
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          $ref: '#/components/schemas/Customkeyword'

    post:
      tags:
        - Keyword APIs
      summary: 새로운 keyword를 해당 유저에게 입력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 학교
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /keywords/{no}:
    put:
      tags:
        - Keyword APIs
      summary: 키워드 번호에 해당하는 키워드 수정
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 회사
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Keyword APIs
      summary: 키워드 번호에 해당하는 키워드 삭제
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /base-keywords:
    get:
      tags:
        - Keyword APIs
      summary: 기본 설정 키워드 목록 출력(관리자만 접근가능)
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 키워드 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Keyword'
    post:
      tags:
        - Keyword APIs
      summary: 기본 설정 키워드 추가(관리자만 접근가능)
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 학교
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
  /base-keywords/{no}:
    put:
      tags:
        - Keyword APIs
      summary: 기본 설정 키워드 수정(관리자만 접근가능)
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 회사
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Keyword APIs
      summary: 기본 설정 키워드 삭제(관리자만 접근가능)
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true


  /like/check:
    post:
      tags:
        - Like APIs
      summary: 사용자가 해당 게시글을 좋아요 했는지 확인 후 좋아요/취소
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                no:
                  type: integer
                  format: int64
                  example: 32512
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 object 객체로 count 키의 value int값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result :
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      count:
                        type: integer
                        format: int32


  /stats/mood/{personal}:
    get:
      tags:
        - Stats APIs
      summary: 일일, 주간, 월간 감정별 평균값 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: personal
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 통계값 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result :
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      daily:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatsDto'
                      weekly:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatsDto'
                      monthly:
                        type: array
                        items:
                          $ref: '#/components/schemas/StatsDto'
  /stats/keyword/{personal}:
    get:
      tags:
        - Stats APIs
      summary: 일일, 주간, 월간 키워드별 평균 감정값 및 갯수 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: personal
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 통계값 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result :
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      daily:
                        type: array
                        items:
                          $ref: '#/components/schemas/KeywordStatsDto'
                      weekly:
                        type: array
                        items:
                          $ref: '#/components/schemas/KeywordStatsDto'
                      monthly:
                        type: array
                        items:
                          $ref: '#/components/schemas/KeywordStatsDto'
  /stats/mood/count/{personal}:
    get:
      tags:
        - Stats APIs
      summary: 일일, 주간, 월간 감정 갯수 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: personal
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 통계값 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result :
                    type: boolean
                    example: true
                  list:
                    type: object
                    properties:
                      daily:
                        type: array
                        items:
                          $ref: '#/components/schemas/MoodChartDto'
                      weekly:
                        type: array
                        items:
                          $ref: '#/components/schemas/MoodChartDto'
                      monthly:
                        type: array
                        items:
                          $ref: '#/components/schemas/MoodChartDto'


  /replys/{no}:
    get:
      tags:
        - Reply APIs
      summary: 해당 게시글의 댓글 목록 출력
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
          description: 게시글 번호
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값 <br>list키의 value는 댓글 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  result :
                    type: boolean
                    example: true
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReplyDto'
    post:
      tags:
        - Reply APIs
      summary: 해당 게시글에 댓글 등록
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
          description: 게시글 번호
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                moodNo:
                  type: integer
                  format: int64
                  example: 32164
                content:
                  type: string
                  example: 공감합니다
              required:
                - moodNo
                - content
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    put:
      tags:
        - Reply APIs
      summary: 해당 댓글번호의 댓글 수정
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
          description: 댓글번호
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 공감합니다
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
    delete:
      tags:
        - Reply APIs
      summary: 해당 댓글 번호의 댓글 삭제
      parameters:
        - in: header
          name: token
          schema:
            type: string
          description: Input Access Token
        - in: path
          name: no
          schema:
            type: integer
            format: int64
          required: true
          description: 댓글번호
      responses:
        '200':
          description: 결과값 json객체가 가진 <br>result키의 value는 통신이 잘 되었는지에 대한 논리값
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true











security:
  - ApiKeyAuth: []


components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: token
  schemas:
    DiaryDto:
      type: object
      properties:
        no:
          type: integer
          format: int64
          example: 4
        content:
          type: string
          example: 내용
        mood:
          type: integer
          format: int32
          example: 5
        regDate:
          type: string
          example: 2020-02-04 03:16:34
        fileDto:
          type: array
          items:
            $ref: '#/components/schemas/FileDto'
        keywordDto:
          type: array
          items:
            $ref: '#/components/schemas/KeywordDto'
        replyCount:
          type: integer
          format: int64
          example: 4
        likeCount:
          type: integer
          format: int64
          example: 2
        likeBoolean:
          type: boolean
          example: false
        isAd:
          type: string
          example: post


    FileDto:
      type: object
      properties:
        filename:
          type: string
          example: son.jpg
        filepath:
          type: string
          example: https://dev-diary-project.s3.ap-northeast-2.amazonaws.com/22/son.jpg

    KeywordDto:
      type: object
      properties:
        keywordContents:
          type: string
          example: apple

    StatsDto:
      type: object
      properties:
        statsTime:
          type: string
          example: 20-02-04
        statsAvg:
          type: string
          example: 3.14

    KeywordStatsDto:
      type: object
      properties:
        text:
          type: string
          example: 키워드
        value:
          type: integer
          format: int32
          example: 10
        mood:
          type: integer
          format: int32
          example: 3

    MoodChartDto:
      type: object
      properties:
        mood:
          type: string
          example: 3
        moodCount:
          type: string
          example: 42

    ReplyDto:
      type: object
      properties:
        replyNo:
          type: integer
          format: int64
          example: 2
        username:
          type: string
          example: namespace
        regDate:
          type: string
          format: date-time
          example: 2020-02-02
        content:
          type: string
          example: 댓글입니다.
        moodNo:
          type: integer
          format: int64
          example: 3

    Customkeyword:
      type: object
      properties:
        no:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: 유저이름
        content:
          type: string
          example: 키워드

    Keyword:
      type: object
      properties:
        no:
          type: integer
          format: int64
          example: 1
        content:
          type: string
          example: 키워드

